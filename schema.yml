openapi: 3.0.3
info:
  title: EffectiveTeam API
  version: 1.0.0
  description: API Schema
paths:
  /api/creators/:
    get:
      operationId: creators_list
      tags:
      - creators
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Creator'
          description: ''
    post:
      operationId: creators_create
      tags:
      - creators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Creator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Creator'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creator'
          description: ''
  /api/creators/{id}/:
    get:
      operationId: creators_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - creators
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creator'
          description: ''
    put:
      operationId: creators_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - creators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Creator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Creator'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creator'
          description: ''
    patch:
      operationId: creators_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - creators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCreator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCreator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCreator'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creator'
          description: ''
    delete:
      operationId: creators_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - creators
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/members/:
    get:
      operationId: members_list
      tags:
      - members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
          description: ''
    post:
      operationId: members_create
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Member'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ''
  /api/members/{id}/:
    get:
      operationId: members_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ''
    put:
      operationId: members_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Member'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ''
    patch:
      operationId: members_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMember'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ''
    delete:
      operationId: members_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/teams/:
    get:
      operationId: teams_list
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
          description: ''
    post:
      operationId: teams_create
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /api/teams/{id}/:
    get:
      operationId: teams_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    put:
      operationId: teams_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    patch:
      operationId: teams_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    delete:
      operationId: teams_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/teams/{id}/recruit/:
    post:
      operationId: teams_recruit_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Request'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
  /api/teams/{id}/request/:
    get:
      operationId: teams_request_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
    post:
      operationId: teams_request_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Request'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
          description: ''
  /api/transactions/:
    get:
      operationId: transactions_retrieve
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    post:
      operationId: transactions_create
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
components:
  schemas:
    Creator:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creator_name:
          type: string
          maxLength: 250
        money:
          type: number
          format: double
      required:
      - creator_name
      - id
    Member:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        member_name:
          type: string
          maxLength: 250
        stamina:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - id
      - member_name
    PatchedCreator:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creator_name:
          type: string
          maxLength: 250
        money:
          type: number
          format: double
    PatchedMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        member_name:
          type: string
          maxLength: 250
        stamina:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
    PatchedTeam:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
          readOnly: true
        team_name:
          type: string
          maxLength: 250
        team_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        creator:
          type: integer
    Request:
      type: object
      properties:
        member:
          allOf:
          - $ref: '#/components/schemas/Member'
          readOnly: true
      required:
      - member
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
          readOnly: true
        team_name:
          type: string
          maxLength: 250
        team_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        creator:
          type: integer
      required:
      - creator
      - id
      - members
      - team_name
    Transaction:
      type: object
      properties:
        sender:
          type: integer
        receiver:
          type: integer
        amount:
          type: number
          format: double
      required:
      - receiver
      - sender
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
